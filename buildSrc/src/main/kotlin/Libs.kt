/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions` */
object Libs {
    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * http://tools.android.com */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val fragment_ktx: String = "androidx.fragment:fragment-ktx:" + Versions.fragment_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val legacy_support_v4: String = "androidx.legacy:legacy-support-v4:" +
            Versions.legacy_support_v4

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val lifecycle_common_java8: String = "androidx.lifecycle:lifecycle-common-java8:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_fragment_ktx: String = "androidx.navigation:navigation-fragment-ktx:" +
            Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_safe_args_gradle_plugin: String =
        "androidx.navigation:navigation-safe-args-gradle-plugin:" + Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val navigation_ui_ktx: String = "androidx.navigation:navigation-ui-ktx:" +
            Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val paging_runtime: String = "androidx.paging:paging-runtime:" + Versions.paging_runtime

    /**
     * http://developer.android.com/tools/extras/support-library.html */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_compiler: String = "androidx.room:room-compiler:" + Versions.androidx_room

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html */
    const val room_runtime: String = "androidx.room:room-runtime:" + Versions.androidx_room

    /**
     * https://developer.android.com/testing */
    const val espresso_core: String = "androidx.test.espresso:espresso-core:" +
            Versions.espresso_core

    /**
     * https://developer.android.com/testing */
    const val androidx_test_rules: String = "androidx.test:rules:" + Versions.androidx_test

    /**
     * https://developer.android.com/testing */
    const val androidx_test_runner: String = "androidx.test:runner:" + Versions.androidx_test

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy_paging: String = "com.airbnb.android:epoxy-paging:" +
            Versions.com_airbnb_android

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy_processor: String = "com.airbnb.android:epoxy-processor:" +
            Versions.com_airbnb_android

    /**
     * https://github.com/airbnb/epoxy */
    const val epoxy: String = "com.airbnb.android:epoxy:" + Versions.com_airbnb_android

    /**
     * https://developer.android.com/studio */
    const val aapt2: String = "com.android.tools.build:aapt2:" + Versions.aapt2

    /**
     * https://developer.android.com/studio */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/studio */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * https://github.com/bumptech/glide */
    const val com_github_bumptech_glide_compiler: String = "com.github.bumptech.glide:compiler:" +
            Versions.com_github_bumptech_glide

    /**
     * https://github.com/bumptech/glide */
    const val glide: String = "com.github.bumptech.glide:glide:" +
            Versions.com_github_bumptech_glide

    /**
     * https://github.com/bumptech/glide */
    const val recyclerview_integration: String =
            "com.github.bumptech.glide:recyclerview-integration:" +
            Versions.com_github_bumptech_glide

    const val exoplayer: String = "com.google.android.exoplayer:exoplayer:" + Versions.exoplayer

    /**
     * https://github.com/google/dagger */
    const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_android_support: String = "com.google.dagger:dagger-android-support:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_android: String = "com.google.dagger:dagger-android:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger */
    const val dagger: String = "com.google.dagger:dagger:" + Versions.com_google_dagger

    const val firebase_crash: String = "com.google.firebase:firebase-crash:" +
            Versions.firebase_crash

    /**
     * http://tools.android.com/ */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    /**
     * https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter/ */
    const val retrofit2_kotlin_coroutines_adapter: String =
        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" +
                Versions.retrofit2_kotlin_coroutines_adapter

    /**
     * https://github.com/JakeWharton/timber */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    /**
     * http://github.com/square/leakcanary/ */
    const val leakcanary_android_no_op: String =
            "com.squareup.leakcanary:leakcanary-android-no-op:" + Versions.com_squareup_leakcanary

    /**
     * http://github.com/square/leakcanary/ */
    const val leakcanary_android: String = "com.squareup.leakcanary:leakcanary-android:" +
            Versions.com_squareup_leakcanary

    /**
     * http://github.com/square/leakcanary/ */
    const val leakcanary_support_fragment: String =
            "com.squareup.leakcanary:leakcanary-support-fragment:" +
            Versions.com_squareup_leakcanary

    /**
     * https://github.com/square/moshi */
    const val moshi_kotlin_codegen: String = "com.squareup.moshi:moshi-kotlin-codegen:" +
            Versions.com_squareup_moshi

    /**
     * https://github.com/square/moshi */
    const val moshi_kotlin: String = "com.squareup.moshi:moshi-kotlin:" +
            Versions.com_squareup_moshi

    /**
     * https://github.com/square/okhttp */
    const val logging_interceptor: String = "com.squareup.okhttp3:logging-interceptor:" +
            Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/okhttp */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/retrofit/ */
    const val converter_moshi: String = "com.squareup.retrofit2:converter-moshi:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/ */
    const val retrofit_mock: String = "com.squareup.retrofit2:retrofit-mock:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/ */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" +
            Versions.com_squareup_retrofit2

    const val com_vanniktech_android_junit_jacoco_gradle_plugin: String =
            "com.vanniktech.android.junit.jacoco:com.vanniktech.android.junit.jacoco.gradle.plugin:" +
            Versions.com_vanniktech_android_junit_jacoco_gradle_plugin

    /**
     * http://github.com/vanniktech/gradle-android-junit-jacoco-plugin/ */
    const val gradle_android_junit_jacoco_plugin: String =
            "com.vanniktech:gradle-android-junit-jacoco-plugin:" +
            Versions.gradle_android_junit_jacoco_plugin

    const val de_fayard_buildsrcversions_gradle_plugin: String =
            "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
            Versions.de_fayard_buildsrcversions_gradle_plugin

    const val android_junit5: String = "de.mannodermaus.gradle.plugins:android-junit5:" +
            Versions.android_junit5

    const val detekt_cli: String = "io.gitlab.arturbosch.detekt:detekt-cli:" +
            Versions.io_gitlab_arturbosch_detekt

    const val io_gitlab_arturbosch_detekt_gradle_plugin: String =
            "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin:" +
            Versions.io_gitlab_arturbosch_detekt

    /**
     * http://mockk.io */
    const val mockk: String = "io.mockk:mockk:" + Versions.mockk

    /**
     * http://junit.org */
    const val junit: String = "junit:junit:" + Versions.junit

    /**
     * https://github.com/saket/flick */
    const val flick: String = "me.saket:flick:" + Versions.flick

    /**
     * http://assertj.org */
    const val assertj_core: String = "org.assertj:assertj-core:" + Versions.assertj_core

    const val org_gradle_kotlin_kotlin_dsl_gradle_plugin: String =
            "org.gradle.kotlin.kotlin-dsl:org.gradle.kotlin.kotlin-dsl.gradle.plugin:" +
            Versions.org_gradle_kotlin_kotlin_dsl_gradle_plugin

    /**
     * http://jacoco.org */
    const val org_jacoco_agent: String = "org.jacoco:org.jacoco.agent:" + Versions.org_jacoco

    /**
     * http://jacoco.org */
    const val org_jacoco_ant: String = "org.jacoco:org.jacoco.ant:" + Versions.org_jacoco

    /**
     * https://kotlinlang.org/ */
    const val kotlin_android_extensions: String =
            "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_reflect: String = "org.jetbrains.kotlin:kotlin-reflect:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_sam_with_receiver: String = "org.jetbrains.kotlin:kotlin-sam-with-receiver:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/ */
    const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_android: String =
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines */
    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:" +
            Versions.org_jetbrains_kotlinx

    const val kotlinter_gradle: String = "org.jmailen.gradle:kotlinter-gradle:" +
            Versions.kotlinter_gradle

    /**
     * https://junit.org/junit5/ */
    const val junit_jupiter: String = "org.junit.jupiter:junit-jupiter:" + Versions.junit_jupiter
}
