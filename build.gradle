/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
apply from: 'dependencies.gradle'
    repositories {
        mavenCentral()
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.0.0"
        classpath 'com.jaredsburrows:gradle-license-plugin:0.8.5'
    }
}

plugins {
    id 'com.gradle.build-scan' version '2.3'
    id("io.gitlab.arturbosch.detekt") version("1.0.0-RC14")
}

buildScan {
    setTermsOfServiceUrl("https://gradle.com/terms-of-service")
    setTermsOfServiceAgree("yes")
    publishAlways()
}


allprojects {
    repositories {
        jcenter()
        google()
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += [
                "-Adagger.formatGeneratedSource=disabled",
                "-Adagger.gradle.incremental=true"
        ]

    }

    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
            arg('dagger.formatGeneratedSource', 'disabled')
            arg('dagger.gradle.incremental', 'true')
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
