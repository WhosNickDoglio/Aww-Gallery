/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.jaredsburrows.license'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'jacoco-android'
//apply plugin: 'com.soundcloud.delect' TODO need dagger-reflect to support Class keys in Maps
apply from: "../ktlint.gradle"

androidExtensions {
    experimental = true
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
    javacOptions {
        option("-source", "8")
        option("-target", "8")
    }
}

jacoco {
    toolVersion = "0.8.4"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}


android {
    compileSdkVersion Config.compileSdkVersion
    defaultConfig {
        applicationId "com.nicholasdoglio.eyebleach"
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode Config.versionCode
        versionName Config.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation Libs.org_jetbrains_kotlin_kotlin_stdlib_jdk8

    implementation Libs.android_driver
    implementation Libs.android_paging_extensions

    implementation Libs.kotlinx_coroutines_core
    implementation Libs.kotlinx_coroutines_android

    implementation Libs.appcompat
    implementation Libs.activity_ktx
    implementation Libs.recyclerview
    implementation Libs.constraintlayout
    implementation Libs.swiperefreshlayout

    implementation Libs.material

    implementation Libs.core_ktx
    implementation Libs.fragment_ktx
    implementation Libs.navigation_ui_ktx
    implementation Libs.navigation_fragment_ktx

    implementation Libs.paging_runtime_ktx

    implementation Libs.lifecycle_viewmodel_ktx
    implementation Libs.lifecycle_runtime_ktx
    implementation Libs.lifecycle_livedata_ktx
    implementation Libs.lifecycle_common_java8

    implementation Libs.work_runtime_ktx

    implementation Libs.epoxy
    implementation Libs.epoxy_paging
    kapt Libs.epoxy_processor

    implementation Libs.coil
    implementation Libs.coil_base

    implementation Libs.retrofit
    implementation Libs.converter_moshi
    implementation Libs.okhttp
    implementation Libs.logging_interceptor

    implementation Libs.moshi
    kapt Libs.moshi_kotlin_codegen

    debugImplementation Libs.leakcanary_android

    implementation Libs.dagger
    kapt Libs.dagger_compiler

    compileOnly Libs.assisted_inject_annotations_dagger2
    kapt Libs.assisted_inject_processor_dagger2

    implementation Libs.timber

    testImplementation Libs.junit
    testImplementation Libs.core_testing
    testImplementation Libs.fragment_testing
}
