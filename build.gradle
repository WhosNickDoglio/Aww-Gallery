/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:3.4.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.30")
        classpath("com.squareup.sqldelight:gradle-plugin:1.1.3")
        classpath("com.vanniktech:gradle-android-junit-jacoco-plugin:0.14.0")
        classpath("com.google.gms:google-services:4.2.0")
        classpath("androidx.navigation:navigation-safe-args-gradle-plugin:2.0.0")
    }
}

plugins {
    id("io.gitlab.arturbosch.detekt") version("1.0.0-RC14")
    id("de.fayard.buildSrcVersions") version("0.3.2")
    id("com.vanniktech.android.junit.jacoco") version("0.14.0")
}

buildSrcVersions {
    useFdqnFor.set(["dagger", "kotlin-stdblib-jdk8"])
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    tasks.withType(JavaCompile).configureEach {
        options.compilerArgs += [
                "-Adagger.formatGeneratedSource=disabled",
                "-Adagger.gradle.incremental=true"
        ]

    }

    afterEvaluate {
        if (project.plugins.hasPlugin("kotlin-kapt") || //Not sure if both are needed or just one?
                project.plugins.hasPlugin("org.jetbrains.kotlin.kapt")) {
            kapt {
                useBuildCache = true
                arguments {
                    arg("dagger.formatGeneratedSource", "disabled")
                    arg("dagger.gradle.incremental", "enabled")
                }
            }
        }
    }
}


task clean(type: Delete) {
    delete rootProject.buildDir
}

junitJacoco {
    jacocoVersion = "0.8.3"
}
