/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.jaredsburrows.license'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply from: "../ktlint.gradle"

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.nicholasdoglio.eyebleach"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 4
        versionName "0.0.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    useBuildCache = true
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation libs.kotlin

    implementation libs.coroutines_core
    implementation libs.coroutines_android

    implementation libs.appcompat
    implementation libs.recyclerview
    implementation libs.constraint

    implementation libs.material

    implementation libs.core_ktx
    implementation libs.fragment
    implementation libs.navigation_ui_ktx
    implementation libs.navigation_fragment_ktx

    implementation libs.paging_runtime

    implementation libs.lifecycle_extensions
    implementation libs.lifecycle_commons

    implementation libs.room_runtime
    implementation libs.room_ktx
    kapt libs.room_compiler

    implementation libs.work_runtime

    kapt libs.glide_compiler
    implementation libs.glide
    implementation libs.glide_okhttp
    implementation(libs.glide_recyclerview) {
        transitive = false
    }

    implementation libs.retrofit
    implementation libs.retrofit_converter_moshi
    implementation libs.retrofit_coroutines_adapter
    implementation libs.okhttp
    implementation libs.okhttp_logging

    implementation libs.moshi
    kapt libs.moshi_codegen

    debugImplementation libs.leak_canary

    implementation libs.dagger
    kapt libs.dagger_compiler

    compileOnly libs.assisted_inject
    kapt libs.assisted_inject_processor

    implementation libs.timber

    testImplementation libs.junit
    testImplementation libs.core_testing
    testImplementation libs.room_testing
}
