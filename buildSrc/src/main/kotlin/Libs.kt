/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val appcompat: String = "androidx.appcompat:appcompat:" + Versions.appcompat

    /**
     * http://tools.android.com
     */
    const val constraintlayout: String = "androidx.constraintlayout:constraintlayout:" +
            Versions.constraintlayout

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val core_ktx: String = "androidx.core:core-ktx:" + Versions.core_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val fragment_ktx: String = "androidx.fragment:fragment-ktx:" + Versions.fragment_ktx

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val legacy_support_v4: String = "androidx.legacy:legacy-support-v4:" +
            Versions.legacy_support_v4

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_common_java8: String = "androidx.lifecycle:lifecycle-common-java8:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val lifecycle_extensions: String = "androidx.lifecycle:lifecycle-extensions:" +
            Versions.androidx_lifecycle

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_fragment_ktx: String = "androidx.navigation:navigation-fragment-ktx:" +
            Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_safe_args_gradle_plugin: String =
        "androidx.navigation:navigation-safe-args-gradle-plugin:" + Versions.androidx_navigation

    /**
     * https://developer.android.com/topic/libraries/architecture/index.html
     */
    const val navigation_ui_ktx: String = "androidx.navigation:navigation-ui-ktx:" +
            Versions.androidx_navigation

    /**
     * http://developer.android.com/tools/extras/support-library.html
     */
    const val recyclerview: String = "androidx.recyclerview:recyclerview:" + Versions.recyclerview

    /**
     * https://developer.android.com/studio
     */
    const val com_android_tools_build_gradle: String = "com.android.tools.build:gradle:" +
            Versions.com_android_tools_build_gradle

    /**
     * https://developer.android.com/studio
     */
    const val lint_gradle: String = "com.android.tools.lint:lint-gradle:" + Versions.lint_gradle

    /**
     * https://github.com/bumptech/glide
     */
    const val com_github_bumptech_glide_compiler: String = "com.github.bumptech.glide:compiler:" +
            Versions.com_github_bumptech_glide

    /**
     * https://github.com/bumptech/glide
     */
    const val glide: String = "com.github.bumptech.glide:glide:" +
            Versions.com_github_bumptech_glide

    const val exoplayer: String = "com.google.android.exoplayer:exoplayer:" + Versions.exoplayer

    /**
     * https://github.com/google/dagger
     */
    const val dagger_android_processor: String = "com.google.dagger:dagger-android-processor:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger_android_support: String = "com.google.dagger:dagger-android-support:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger_android: String = "com.google.dagger:dagger-android:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger_compiler: String = "com.google.dagger:dagger-compiler:" +
            Versions.com_google_dagger

    /**
     * https://github.com/google/dagger
     */
    const val dagger: String = "com.google.dagger:dagger:" +
        Versions.com_google_dagger

    /**
     * http://tools.android.com/
     */
    const val google_services: String = "com.google.gms:google-services:" + Versions.google_services

    /**
     * http://github.com/google/truth
     */
    const val truth: String = "com.google.truth:truth:" + Versions.truth

    /**
     * https://github.com/JakeWharton/retrofit2-kotlin-coroutines-adapter/
     */
    const val retrofit2_kotlin_coroutines_adapter: String =
        "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:" +
            Versions.retrofit2_kotlin_coroutines_adapter

    /**
     * https://github.com/JakeWharton/timber
     */
    const val timber: String = "com.jakewharton.timber:timber:" + Versions.timber

    /**
     * https://github.com/square/moshi
     */
    const val moshi_kotlin_codegen: String = "com.squareup.moshi:moshi-kotlin-codegen:" +
            Versions.com_squareup_moshi

    /**
     * https://github.com/square/moshi
     */
    const val moshi: String = "com.squareup.moshi:moshi:" + Versions.com_squareup_moshi

    /**
     * https://github.com/square/okhttp
     */
    const val logging_interceptor: String = "com.squareup.okhttp3:logging-interceptor:" +
            Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/okhttp
     */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.com_squareup_okhttp3

    /**
     * https://github.com/square/retrofit/
     */
    const val converter_moshi: String = "com.squareup.retrofit2:converter-moshi:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/
     */
    const val retrofit_mock: String = "com.squareup.retrofit2:retrofit-mock:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/retrofit/
     */
    const val retrofit: String = "com.squareup.retrofit2:retrofit:" +
            Versions.com_squareup_retrofit2

    /**
     * https://github.com/square/sqldelight/
     */
    const val android_driver: String = "com.squareup.sqldelight:android-driver:" +
        Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/
     */
    const val gradle_plugin: String = "com.squareup.sqldelight:gradle-plugin:" +
        Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/
     */
    const val runtime_jvm: String = "com.squareup.sqldelight:runtime-jvm:" +
        Versions.com_squareup_sqldelight

    /**
     * https://github.com/square/sqldelight/
     */
    const val com_squareup_sqldelight_runtime: String = "com.squareup.sqldelight:runtime:" +
        Versions.com_squareup_sqldelight

    const val com_vanniktech_android_junit_jacoco_gradle_plugin: String =
            "com.vanniktech.android.junit.jacoco:com.vanniktech.android.junit.jacoco.gradle.plugin:" +
            Versions.com_vanniktech_android_junit_jacoco_gradle_plugin

    /**
     * http://github.com/vanniktech/gradle-android-junit-jacoco-plugin/
     */
    const val gradle_android_junit_jacoco_plugin: String =
            "com.vanniktech:gradle-android-junit-jacoco-plugin:" +
            Versions.gradle_android_junit_jacoco_plugin

    const val de_fayard_buildsrcversions_gradle_plugin: String =
            "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
            Versions.de_fayard_buildsrcversions_gradle_plugin

    const val detekt_cli: String = "io.gitlab.arturbosch.detekt:detekt-cli:" +
            Versions.io_gitlab_arturbosch_detekt

    const val io_gitlab_arturbosch_detekt_gradle_plugin: String =
            "io.gitlab.arturbosch.detekt:io.gitlab.arturbosch.detekt.gradle.plugin:" +
            Versions.io_gitlab_arturbosch_detekt

    /**
     * http://mockk.io
     */
    const val mockk: String = "io.mockk:mockk:" + Versions.mockk

    /**
     * https://github.com/saket/flick
     */
    const val flick: String = "me.saket:flick:" + Versions.flick

    const val org_gradle_kotlin_kotlin_dsl_gradle_plugin: String =
            "org.gradle.kotlin.kotlin-dsl:org.gradle.kotlin.kotlin-dsl.gradle.plugin:" +
            Versions.org_gradle_kotlin_kotlin_dsl_gradle_plugin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions_runtime: String =
        "org.jetbrains.kotlin:kotlin-android-extensions-runtime:" +
            Versions.kotlin_android_extensions_runtime

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_android_extensions: String =
        "org.jetbrains.kotlin:kotlin-android-extensions:" + Versions.kotlin_android_extensions

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_annotation_processing_gradle: String =
            "org.jetbrains.kotlin:kotlin-annotation-processing-gradle:" +
                Versions.kotlin_annotation_processing_gradle

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
        Versions.kotlin_gradle_plugin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_reflect: String = "org.jetbrains.kotlin:kotlin-reflect:" +
        Versions.kotlin_reflect

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_sam_with_receiver: String = "org.jetbrains.kotlin:kotlin-sam-with-receiver:" +
        Versions.kotlin_sam_with_receiver

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" +
                Versions.kotlin_scripting_compiler_embeddable

    /**
     * https://kotlinlang.org/
     */
    const val org_jetbrains_kotlin_kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
        Versions.kotlin_stdlib_jdk8

    /**
     * https://github.com/Kotlin/kotlinx.coroutines
     */
    const val kotlinx_coroutines_android: String =
        "org.jetbrains.kotlinx:kotlinx-coroutines-android:" + Versions.org_jetbrains_kotlinx

    /**
     * https://github.com/Kotlin/kotlinx.coroutines
     */
    const val kotlinx_coroutines_core: String = "org.jetbrains.kotlinx:kotlinx-coroutines-core:" +
            Versions.org_jetbrains_kotlinx

    /**
     * https://junit.org/junit5/
     */
    const val junit_jupiter: String = "org.junit.jupiter:junit-jupiter:" + Versions.junit_jupiter
}
