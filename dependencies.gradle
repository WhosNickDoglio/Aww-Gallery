/*
 * MIT License
 *
 * Copyright (c) 2019 Nicholas Doglio
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

ext {
    versions = [
            agp                        : '3.4.1',
            gradle_license             : '0.8.5',
            kotlin                     : '1.3.31',
            appcompat                  : '1.1.0-alpha05',
            recyclerview               : '1.1.0-alpha05',
            constraintlayout           : '2.0.0-beta2',
            material                   : '1.1.0-alpha06',
            core_ktx                   : '1.1.0-beta01',
            fragment_ktx               : '1.1.0-alpha09',
            navigation                 : '2.1.0-alpha04',
            paging                     : '2.1.0',
            lifecycle                  : '2.2.0-alpha01',
            room                       : '2.1.0-beta01',
            work                       : '2.1.0-alpha02',
            glide                      : '4.9.0',
            retrofit                   : '2.5.0',
            okhttp                     : '3.14.2',
            moshi                      : '1.8.0',
            canary                     : '2.0-alpha-2',
            dagger                     : '2.22.1',
            timber                     : '4.7.1',
            junit                      : '4.12',
            assisted_inject            : '0.4.0',
            core_testing               : "2.0.1",
            ktlint                     : '0.32.0',
            coroutines                 : '1.2.1',
            retrofit_coroutines_adapter: '0.9.2'

    ]
    libs = [
            kotlin                     : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}",
            appcompat                  : "androidx.appcompat:appcompat:${versions.appcompat}",
            recyclerview               : "androidx.recyclerview:recyclerview:${versions.recyclerview}",
            material                   : "com.google.android.material:material:${versions.material}",
            core_ktx                   : "androidx.core:core-ktx:${versions.core_ktx}",
            constraint                 : "androidx.constraintlayout:constraintlayout:${versions.constraintlayout}",
            fragment                   : "androidx.fragment:fragment-ktx:${versions.fragment_ktx}",
            navigation_ui_ktx          : "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
            navigation_fragment_ktx    : "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
            paging_runtime             : "androidx.paging:paging-runtime-ktx:${versions.paging}",
            lifecycle_extensions       : "androidx.lifecycle:lifecycle-extensions:${versions.lifecycle}",
            lifecycle_commons          : "androidx.lifecycle:lifecycle-common-java8:${versions.lifecycle}",
            room_runtime               : "androidx.room:room-runtime:${versions.room}",
            room_ktx                   : "androidx.room:room-ktx:${versions.room}",
            room_compiler              : "androidx.room:room-compiler:${versions.room}",
            work_runtime               : "androidx.work:work-runtime-ktx:${versions.work}",
            glide_compiler             : "com.github.bumptech.glide:compiler:${versions.glide}",
            glide                      : "com.github.bumptech.glide:glide:${versions.glide}",
            glide_okhttp               : "com.github.bumptech.glide:okhttp3-integration:${versions.glide}",
            glide_recyclerview         : "com.github.bumptech.glide:recyclerview-integration:${versions.glide}",
            retrofit                   : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
            retrofit_converter_moshi   : "com.squareup.retrofit2:converter-moshi:${versions.retrofit}",
            retrofit_coroutines_adapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:${versions.retrofit_coroutines_adapter}",
            okhttp                     : "com.squareup.okhttp3:okhttp:${versions.okhttp}",
            okhttp_logging             : "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}",
            moshi                      : "com.squareup.moshi:moshi:${versions.moshi}",
            moshi_codegen              : "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",
            leak_canary                : "com.squareup.leakcanary:leakcanary-android:${versions.canary}",
            dagger                     : "com.google.dagger:dagger:${versions.dagger}",
            dagger_compiler            : "com.google.dagger:dagger-compiler:${versions.dagger}",
            timber                     : "com.jakewharton.timber:timber:${versions.timber}",
            junit                      : "junit:junit:${versions.junit}",
            core_testing               : "androidx.arch.core:core-testing:${versions.core_testing}",
            room_testing               : "androidx.room:room-testing:${versions.room}",
            assisted_inject            : "com.squareup.inject:assisted-inject-annotations-dagger2:${versions.assisted_inject}",
            assisted_inject_processor  : "com.squareup.inject:assisted-inject-processor-dagger2:${versions.assisted_inject}",
            ktlint                     : "com.pinterest:ktlint:${versions.ktlint}",
            coroutines_core            : "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}",
            coroutines_android         : "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}",

    ]
}